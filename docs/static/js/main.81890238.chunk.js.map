{"version":3,"sources":["components/Button.js","components/NumOps.js","components/EraseBtn.js","components/Form.js","components/Screen.js","components/Container.js","components/Columns.js","App.js","index.js"],"names":["Button","value","className","handleClick","type","onClick","e","target","NumOps","data","functionSet","x","xi","coma","operadores","addValue","val","includes","charAt","length","result","sol","eval","toString","raizC","Math","sqrt","porcentaje","temporal","pi","PI","exponente","pow","href","EraseBtn","ni","cifras","lastChar","substr","Form","children","action","name","id","Screen","Container","useState","controlScreen","setControlScreen","handleControl","modifier","prevState","Columns","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.81890238.chunk.js","sourcesContent":["import React from 'react';\nimport '../assets/Buttons.css'\n\nconst Button = ({value, className, handleClick}) => {\n    function handleOnClick(e) {\n       handleClick(e.target.value)\n    }\n    return(\n        <input type='button' value={value} className={className} onClick={handleOnClick} />\n    )\n};\n\nexport default Button;","import React from 'react';\nimport Button from './Button';\n\nconst NumOps = ({data, functionSet}) => {\n    const {x, xi, coma} = data; //desestructurando\n    \n    const operadores = ['+', '-', '*' , '/'];\n\n    function addValue(val) {\n        \n        if(x === '0' || xi === 1) {  // si no hay nada en pantalla,\n            functionSet({x: val}) //guardar número;\n            if (val === '.') {//si escribimos una coma al principio del número\n                functionSet({x: '0.', coma: 1})//guardar numero y cambiar estado de la coma\n            }\n        }else {//continuar escribiendo un número\n            if(val === '.' && coma === 0) { //si escribimos una coma decimal por primera vez\n                functionSet({x: x+val, coma:1}); //concatenar numero y cambiar el estado de la coma\n            \n            }else if(val === '.' && coma === 1) { }//si intentamos escribir una segunda coma decimal no realiza ninguna acción.\n            else if(operadores.includes(x.charAt(x.length-1)) && operadores.includes(val)) { }// si escribimos operadores seguidos\n            \n            else{//Resto de casos: escribir un número del 0 al 9\n                functionSet({x: x+val}) //concatenar valores\n            }\n        }\n        functionSet({xi: 0})\n\n    }\n\n    // function operar(val) {\n    //     result();\n    //     functionSet({ni: x, op: val, xi: 1});\n    // }\n\n\n    function result() {\n        // if(op !== 'no') {\n            // let sl = ni + op + x;\n            let sol = eval(x).toString();//convierte a texto. Evaluamos lo que este en x\n            functionSet({x: sol, xi: 1}) // actualizamos valores e inicializamos pantalla\n        // }\n    }\n\n    function raizC() { // raiz cuadrada\n        functionSet({x: Math.sqrt(x), xi: 1});\n    }\n\n    function porcentaje() {\n        let temporal = eval(`${x} / 100` ) //evaluamos la operacion dividiendo por 100\n        functionSet({x: temporal, xi: 1});\n    }\n    \n    function pi() { // mostrar valor de pi\n        functionSet({x: Math.PI})\n    }\n\n    function exponente() { // elevar un numero al cuadrado\n        functionSet({x: Math.pow(x, 2)})\n    }\n\n    return(\n        <div className=\"grilla\">\n            <Button value='7' className='btn' handleClick={addValue}  />\n            <Button value='8' className='btn' handleClick={addValue} />\n            <Button value='9' className='btn' handleClick={addValue} />\n            <Button value='/' className='btn op' handleClick={addValue} />\n            <Button value='√' className='btn op' handleClick={raizC} />\n            <Button value='4' className='btn' handleClick={addValue} />\n            <Button value='5' className='btn' handleClick={addValue} />\n            <Button value='6' className='btn' handleClick={addValue} />\n            <Button value='*' className='btn op' handleClick={addValue} />\n            <Button value='%' className='btn op' handleClick={porcentaje} />\n            <Button value='1' className='btn' handleClick={addValue} />\n            <Button value='2' className='btn' handleClick={addValue} />\n            <Button value='3' className='btn' handleClick={addValue} />\n            <Button value='-' className='btn op' handleClick={addValue} />\n            <Button value='x^2' className='btn op' handleClick={exponente} />\n            <Button value='0' className='btn cero' handleClick={addValue} />\n            <Button value='.' className='btn' handleClick={addValue} />\n            <Button value='+' className='btn op' handleClick={addValue} />\n            <Button value='π' className='btn op' handleClick={pi} />\n            <div className=\"info\"><a href=\"https//aprende-web.net/jspracticas/calculadora/calculadora2.php\" target=\"_blank\">Más información aquí</a></div>\n            <Button value='=' className='btn result' handleClick={result} />\n\n        </div>\n    )\n}\n\nexport default NumOps;","import React from 'react';\nimport Button from './Button';\nimport '../assets/Container.css'\n\nconst EraseBtn = ({data, functionSet}) => {\n\n    const {x, xi, coma, ni} = data;\n    //  borrar solo un dígito\n    function retro() { \n        let cifras = x.length; //hayar número de caracteres en pantalla\n        let lastChar = x.substr(cifras - 1, cifras); //info del último caracter\n        functionSet({x: x.substr(0, cifras - 1)}); //quitar el ultimo caracter\n        if(x==='') {functionSet({x: '0'})};//si ya no quedan caracteres, pondremos el 0\n        if(lastChar == '.') {functionSet({coma: 0})};//Si hemos quitado la coma, se permite escribirla de nuevo\n    }\n\n    // function borradoParcial() {\n    //      functionSet({ni: x, x: '0', coma: 0})\n    // }\n\n    function borradoTotal() {\n        functionSet({x: '0', coma: 0, xi: 1})\n    }\n\n    return(\n        <div className =\"erase\">\n            <Button value='⌫' className='btn clean' handleClick={retro} />\n            <input type='button' value='㋡' className='btn clean' />\n            <Button value='CE' className='btn clean' handleClick={borradoTotal} />\n        </div>\n    )\n}\nexport default EraseBtn;","import React from 'react';\n\nconst Form = ({children}) => {\n    return(\n        <form action=\"#\" name=\"calc\" id=\"calculadora\">\n            {children}\n        </form>\n    )\n}\n\nexport default Form;","import React from 'react';\nimport '../assets/Container.css'\n\nfunction Screen({data}) {\n    \n     return(\n        <p id=\"campo\">{data.x}</p> // imprimimos en la pantalla el valor de x\n    )\n}\n\nexport default Screen;","import {useState} from 'react';\nimport '../assets/Container.css'\nimport EraseBtn from './EraseBtn';\nimport Form from './Form';\nimport NumOps from './NumOps';\nimport Screen from './Screen';\n\nfunction Container() {\n    // creamos un estado con un objeto para compartir las variables con los componentes hijos a traves de props\n    const [controlScreen, setControlScreen] = useState({ \n        x:'0',//x =número en pantalla\n        xi:1,  //xi =iniciar número en pantalla: 1=si; 0=no;\n        coma:0, //coma =estado coma decimal 0=no, 1=si;\n        //ni:0, //ni =número oculto o en espera\n        // op:'no'//op = operación en curso; \"no\" =  sin operación\n    })\n    \n    function handleControl (modifier) {//como parámetro pasamos los valores que quiero cambiar\n        setControlScreen(prevState => ({...prevState, ...modifier})) //modifico el estado teniendo en cuenta el valor previo y editando la data\n    }\n\n    \n   \n    return(\n        <div className='contenedor'>\n            <Form>  {/* dentro de form indicamos los children */}\n                <Screen data={controlScreen} functionSet={handleControl} />   {/* manejo de pantalla */}\n                <br/>\n                <EraseBtn data={controlScreen} functionSet={handleControl}/>{/* manejo de botones borrar */}\n                <NumOps data={controlScreen} functionSet={handleControl}/>{/* manejo de botones numericos y operadores */}\n            </Form>\n        </div>\n    )\n}\n\nexport default Container;","import React from 'react';\nimport Container from './Container';\n\nfunction Columns() {\n    return(\n        <div className='columnas'>\n            {/* grillas aplicando grid */}\n            <div></div>\n            <Container />\n            <div></div>\n        </div>\n    )\n}\n\nexport default Columns;","import './assets/App.css';\nimport Columns from './components/Columns';\n\nfunction App() {\n  return (\n      <div className=\"App\">\n          <h1>Calculadora</h1> {/* header */}\n          <Columns /> {/* columnas para generar una grilla y centrar contenido */}\n      </div>\n  );\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './assets/index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}